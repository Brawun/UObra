/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Obrero;

import DAOs.ObrasObreroDAO;
import DAOs.ObrerosDAO;
import Dominio.ObrasObrero;
import Dominio.Obreros;
import Herramientas.Fecha;
import Herramientas.Icono;
import Herramientas.Validadores;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 52644
 */
public class ConsultarObrasObrero extends javax.swing.JFrame {

    // Atributos
    Obreros obrero = new Obreros();
    ObrerosDAO ObrerosDAO = new ObrerosDAO();
    ObrasObreroDAO ObrasObreroDAO = new ObrasObreroDAO();

    /**
     * Crea un nuevo frame ObrasObrero
     *
     * @param obrero Obrero de cuenta iniciada
     */
    public ConsultarObrasObrero(Obreros obrero) {
        initComponents();
        new Icono().insertarIcono(this);
        this.obrero = obrero;
        this.txtDias.setEditable(true);
        this.txtDias.setText("0");
    }

    public void cargarTablaObrasObrero(Boolean activa, Integer fechas) throws Exception {
        List<ObrasObrero> listaObrasObrero;
        Fecha fecha = new Fecha();
        if (fechas == 0) {
            listaObrasObrero = ObrasObreroDAO.consultarObrasObrerosFechaFin( // Se busca por acción FIN
                    this.periodoInicio.getCalendar() != null // Si el usuario ingresó un periodo inicio se ingresa en el campo
                    ? this.periodoInicio.getCalendar() : null,
                    this.periodoFinal.getCalendar() != null // Si el usuario ingresó un periodo fin se ingresa en el campo
                    ? this.periodoFinal.getCalendar() : null,
                    activa,
                    Integer.valueOf(this.txtDias.getText()) == 0 ? null : Integer.valueOf(this.txtDias.getText()),
                    null, // Cualquier obra
                    this.obrero.getId()); // Obrero
        } else {
            listaObrasObrero = ObrasObreroDAO.consultarObrasObrerosFechaInicio( // Se busca por acción FIN
                    this.periodoInicio.getCalendar() != null // Si el usuario ingresó un periodo inicio se ingresa en el campo
                    ? this.periodoInicio.getCalendar() : null,
                    this.periodoFinal.getCalendar() != null // Si el usuario ingresó un periodo fin se ingresa en el campo
                    ? this.periodoFinal.getCalendar() : null,
                    activa,
                    Integer.valueOf(this.txtDias.getText()) == 0 ? null : Integer.valueOf(this.txtDias.getText()),
                    null, // Cualquier obra
                    this.obrero.getId()); // Obrero
        }
        DefaultTableModel modeloTablaObrasObrero = (DefaultTableModel) this.tblResultados.getModel();
        modeloTablaObrasObrero.setRowCount(0);
        for (ObrasObrero obrasObrero : listaObrasObrero) {
            Object[] filaNueva = {obrasObrero.getId(),
                fecha.formatoFecha(obrasObrero.getFechaInicio()),
                obrasObrero.getFechaFin() != null ? fecha.formatoFecha(obrasObrero.getFechaFin()) : "No aplica",
                obrasObrero.getActivo() == true ? "Activa" : "Inactiva",
                obrasObrero.getDiasTrabajados() + " dia(s)",
                obrasObrero.getObra().getId()};
            modeloTablaObrasObrero.addRow(filaNueva);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPanel = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();
        Separador1 = new javax.swing.JSeparator();
        Separador2 = new javax.swing.JSeparator();
        cbxEstado = new javax.swing.JComboBox<>();
        cbxAccion = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        periodoInicio = new com.toedter.calendar.JDateChooser();
        periodoFinal = new com.toedter.calendar.JDateChooser();
        txtDias = new javax.swing.JTextField();
        lblTitulo = new javax.swing.JLabel();
        lblFechaInicio = new javax.swing.JLabel();
        lblBusqueda = new javax.swing.JLabel();
        lblFechaFin = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblDias = new javax.swing.JLabel();
        lblResultado = new javax.swing.JLabel();
        lblAccion = new javax.swing.JLabel();
        lblQue = new javax.swing.JLabel();
        lblEnUnPeriodo = new javax.swing.JLabel();
        lblEnEstado = new javax.swing.JLabel();
        lblConMinimo = new javax.swing.JLabel();
        UObraLogoPeque = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Consultar Obras - Obrero");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        ScrollPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ScrollPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        tblResultados.setBackground(new java.awt.Color(255, 255, 255));
        tblResultados.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha Inicio", "Fecha Fin", "Activa", "Dias Trabajados", "ID Obra"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResultados.setRequestFocusEnabled(false);
        ScrollPanel.setViewportView(tblResultados);

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija uno...", "Indistinto", "Activa", "Inactiva" }));
        cbxEstado.setToolTipText("Elija un estado");
        cbxEstado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbxEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbxEstadoFocusLost(evt);
            }
        });

        cbxAccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija uno...", "Iniciado", "Terminado" }));
        cbxAccion.setToolTipText("Elija una acción");
        cbxAccion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnRegresar.setText("Regresar");
        btnRegresar.setToolTipText("Regresar a Panel Obrero");
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Buscar Obras - Obrero");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        periodoInicio.setToolTipText("Periodo inicio");

        periodoFinal.setToolTipText("Periodo fin");

        txtDias.setToolTipText("Ingrese números enteros");
        txtDias.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitulo.setText("Obras - Obrero");

        lblFechaInicio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFechaInicio.setText("Fecha inicio:");

        lblBusqueda.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblBusqueda.setText("Búsqueda Dinámica:");

        lblFechaFin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFechaFin.setText("Fecha fin:");

        lblEstado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEstado.setText("Estado:");

        lblDias.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDias.setText("Días:");

        lblResultado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblResultado.setText("Resultado:");

        lblAccion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAccion.setText("Acción:");

        lblQue.setText("Obra - Obrero que haya...");

        lblEnUnPeriodo.setText("En un periodo de...");

        lblEnEstado.setText("Se encuentren en estado...");

        lblConMinimo.setText("Mínimo de días trabajados de...");

        UObraLogoPeque.setIcon(new javax.swing.ImageIcon("D:\\Documentos\\Word\\ITSON\\3er-4to Semestre\\4°\\Pruebas de Software\\UObra\\src\\main\\java\\Multimedia\\UObraPeque.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblResultado))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(ScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(btnRegresar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBusqueda)
                            .addComponent(Separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(lblEnUnPeriodo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(lblAccion)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQue)
                            .addComponent(cbxAccion, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaInicio)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblFechaFin)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(periodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(periodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(lblDias)
                            .addGap(12, 12, 12)
                            .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(53, 53, 53)
                            .addComponent(lblEnEstado))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblEstado)
                            .addGap(12, 12, 12)
                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(btnBuscar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblConMinimo)
                        .addGap(10, 10, 10)))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UObraLogoPeque)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblTitulo))
                    .addComponent(UObraLogoPeque, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(6, 6, 6)
                .addComponent(Separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(lblBusqueda)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblQue)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblAccion))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cbxAccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(lblEnUnPeriodo)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(periodoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaInicio))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(periodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaFin)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEnEstado)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblEstado))
                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(lblConMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblDias))
                            .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)))
                .addGap(19, 19, 19)
                .addComponent(Separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(lblResultado)
                .addGap(12, 12, 12)
                .addComponent(ScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        new PanelObrero(ObrerosDAO.consultarObrero(this.obrero.getId())).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            Validadores valido = new Validadores();
            if (this.periodoInicio.getCalendar() != null && this.periodoFinal.getCalendar() != null) {
                if (this.cbxAccion.getSelectedItem() != "Elija uno...") {
                    if (this.cbxEstado.getSelectedItem() != "Elija uno...") {
                        if (this.cbxEstado.getSelectedItem() == "Activa") {
                            if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                this.cargarTablaObrasObrero(true, 1);
                            } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                this.cargarTablaObrasObrero(true, 0);
                            }
                        } else if (this.cbxEstado.getSelectedItem() == "Indistinto") {
                            if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                this.cargarTablaObrasObrero(null, 1);
                            } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                this.cargarTablaObrasObrero(null, 0);
                            }
                        } else if (this.cbxEstado.getSelectedItem() == "Inactiva") {

                            if (valido.validarEntero(this.txtDias.getText())) {
                                if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                    this.cargarTablaObrasObrero(false, 1);
                                } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                    this.cargarTablaObrasObrero(false, 0);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: Ingrese días trabajados válidos. (Solamente números enteros)", "¡Error!", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error: Elija un estado de relación obra - obrero válido para la búsqueda dinámica.", "¡Error!", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error: Elija un tipo de acción válido para la búsqueda dinámica.", "¡Error!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (this.cbxAccion.getSelectedItem() != "Elija uno...") {
                    if (this.cbxEstado.getSelectedItem() != "Elija uno...") {
                        if (this.cbxEstado.getSelectedItem() == "Activa") {
                            if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                this.cargarTablaObrasObrero(true, 1);
                            } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                this.cargarTablaObrasObrero(true, 0);
                            }
                        } else if (this.cbxEstado.getSelectedItem() == "Indistinto") {
                            if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                this.cargarTablaObrasObrero(null, 1);
                            } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                this.cargarTablaObrasObrero(null, 0);
                            }
                        } else if (this.cbxEstado.getSelectedItem() == "Inactiva") {

                            if (valido.validarEntero(this.txtDias.getText())) {
                                if (this.cbxAccion.getSelectedItem() == "Iniciado") {
                                    this.cargarTablaObrasObrero(false, 1);
                                } else if (this.cbxAccion.getSelectedItem() == "Terminado") {
                                    this.cargarTablaObrasObrero(false, 0);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: Ingrese días trabajados válidos. (Solamente números enteros)", "¡Error!", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error: Elija un estado de relación obra - obrero válido para la búsqueda dinámica.", "¡Error!", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error: Elija un tipo de acción válido para la búsqueda dinámica.", "¡Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            Logger.getLogger(ConsultarObrasObrero.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cbxEstadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxEstadoFocusLost
        if (this.cbxEstado.getSelectedItem() == "Activa" || this.cbxEstado.getSelectedItem() == "Indistinto") {
            this.txtDias.setEditable(false);
            this.txtDias.setText("0");
        } else if (this.cbxEstado.getSelectedItem() == "Inactiva") {
            this.txtDias.setEditable(true);
            this.txtDias.setText("1");
        }
    }//GEN-LAST:event_cbxEstadoFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPanel;
    private javax.swing.JSeparator Separador1;
    private javax.swing.JSeparator Separador2;
    private javax.swing.JLabel UObraLogoPeque;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbxAccion;
    private javax.swing.JComboBox<String> cbxEstado;
    private javax.swing.JLabel lblAccion;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JLabel lblConMinimo;
    private javax.swing.JLabel lblDias;
    private javax.swing.JLabel lblEnEstado;
    private javax.swing.JLabel lblEnUnPeriodo;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFechaFin;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblQue;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblTitulo;
    private com.toedter.calendar.JDateChooser periodoFinal;
    private com.toedter.calendar.JDateChooser periodoInicio;
    private javax.swing.JTable tblResultados;
    private javax.swing.JTextField txtDias;
    // End of variables declaration//GEN-END:variables
}
